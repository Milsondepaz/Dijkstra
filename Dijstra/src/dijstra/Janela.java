/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dijstra;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Milson
 */
public class Janela extends javax.swing.JFrame {

    /**
     * Creates new form Janela
     */
    public Janela() {
        initComponents();
        inicar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaMatrizCustos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnCopiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dijkstra");

        jScrollPane4.setMinimumSize(new java.awt.Dimension(800, 277));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(1000, 277));

        tabelaMatrizCustos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabelaMatrizCustos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaMatrizCustos.setToolTipText("");
        tabelaMatrizCustos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(tabelaMatrizCustos);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("milson.milson@outlook.com");

        btnCopiar.setText("Escreva-me:");
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCopiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnCopiar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        String text = "milson.milson@outlook.com";
        StringSelection selection = new StringSelection(text);
        clipboard.setContents(selection, null);
        btnCopiar.setText("Copiado");
    }//GEN-LAST:event_btnCopiarActionPerformed

    public void inicar() {

        // primeiro cria todos os vertices do seu grafo
        Vertice A = new Vertice("A");
        Vertice B = new Vertice("B");
        Vertice C = new Vertice("C");
        Vertice D = new Vertice("D");
        Vertice E = new Vertice("E");
        Vertice F = new Vertice("F");

        // adicione as relações de adjacencia para todos os vertices
        // vertice de origem, vertice de destino e o peso da aresta        
        A.addAdjacencia(B, 10);
        A.addAdjacencia(C, 15);

        B.addAdjacencia(D, 12);
        B.addAdjacencia(F, 15);

        C.addAdjacencia(E, 10);

        D.addAdjacencia(E, 2);
        D.addAdjacencia(F, 1);

        F.addAdjacencia(E, 5);

        // Cria o grafo
        Grafo grafo = new Grafo();

        // Adiciona os verticies criados ao grafo
        grafo.addVertice(A);
        grafo.addVertice(B);
        grafo.addVertice(C);
        grafo.addVertice(D);
        grafo.addVertice(E);
        grafo.addVertice(F);

        // calcule, passe como paramento o grafo e o vertice inicial que terá no retorno o grafo com dijkstra executado
        grafo = Dijkstra.calcular(grafo, A);

        // ---------------- tratar os dados para ser passado na tabela de roteamento isso pode ser feito de várias maneiras---------                
        // colunas - rotulos dos vertices
        String colunas[] = new String[grafo.getVertices().size() + 1];
        colunas[0] = "Vértice";

        Iterator<Vertice> NosIterator1 = grafo.getVertices().iterator();
        while (NosIterator1.hasNext()) {
            for (int i = 0; i < grafo.getVertices().size(); i++) {
                Vertice noAtual = NosIterator1.next();
                colunas[i + 1] = noAtual.getNome();
            }
        }

        tabelaMatrizCustos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null,},
                    {null, null, null, null,},
                    {null, null, null, null,},
                    {null, null, null, null,}
                },
                colunas
        ));

        DefaultTableModel tabelaM2 = (DefaultTableModel) tabelaMatrizCustos.getModel();
        tabelaM2.setRowCount(0);

        // linha1 - distancias
        String linha1[] = new String[grafo.getVertices().size() + 1];
        Iterator<Vertice> NosIterator2 = grafo.getVertices().iterator();
        if (NosIterator2.hasNext()) {
            linha1[0] = "Distancia";
            for (int i = 0; i < grafo.getVertices().size(); i++) {
                Vertice noAtual = NosIterator2.next();
                linha1[i + 1] = String.valueOf(noAtual.getDistancia());
            }
            tabelaM2.addRow(linha1);
        }

        // linha2 - caminho
        String linha2[] = new String[grafo.getVertices().size() + 1];
        Iterator<Vertice> NosIterator3 = grafo.getVertices().iterator();
        if (NosIterator3.hasNext()) {
            linha2[0] = "Caminho";
            for (int i = 0; i < grafo.getVertices().size(); i++) {
                Vertice noAtual = NosIterator3.next();
                String caminho = "";
                for (int k = 0; k < noAtual.getCaminhoMaisCurto().size(); k++) {
                    caminho = caminho + noAtual.getCaminhoMaisCurto().get(k).getNome() + "-";
                }
                if (!caminho.isEmpty()) {
                    caminho = caminho.substring(0, caminho.length() - 1);
                }
                linha2[i + 1] = caminho;
            }
            tabelaM2.addRow(linha2);
        }

        tabelaMatrizCustos.setEnabled(false);
        tabelaMatrizCustos.setDragEnabled(false);
        tabelaMatrizCustos.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tabelaMatrizCustos;
    // End of variables declaration//GEN-END:variables
}
